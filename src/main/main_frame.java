package main;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.*;
import java.net.URI;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JSeparator;

/**
 *
 * @author SHADOW
 */
public class main_frame extends javax.swing.JFrame {

    private final String folder_path="D:\\PROJET\\VDownloder\\src\\main\\paths.txt";
    private String path="D:\\PROJET\\VDownloder";
    private final String[] command =
	    {
	        "cmd",
	    };
    private final PrintStream printStream;
    
    /**
     * Creates new form main_frame
     */
    public main_frame() {
        initComponents();
        notification.setEnabled(false);
        notification.setDisabledTextColor(Color.black);
        load_path(folder_path);
        printStream = new PrintStream(new ops(notification));
        System.setOut(printStream);
        System.setErr(printStream);    
        load_files();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        check_btn = new javax.swing.JButton();
        input = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notification = new javax.swing.JTextArea();
        download_btn = new javax.swing.JButton();
        number = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        download_btn1 = new javax.swing.JButton();
        download_btn2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        open = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 0, 0));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        check_btn.setBackground(new java.awt.Color(15, 17, 132));
        check_btn.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        check_btn.setForeground(new java.awt.Color(255, 255, 255));
        check_btn.setText("Check");
        check_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_btnActionPerformed(evt);
            }
        });
        jPanel1.add(check_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, 88, 31));
        jPanel1.add(input, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 670, 31));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Choose the Format  :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 120, 31));

        notification.setBackground(new java.awt.Color(0, 0, 0));
        notification.setColumns(20);
        notification.setForeground(new java.awt.Color(255, 255, 255));
        notification.setRows(5);
        jScrollPane1.setViewportView(notification);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 88, 700, 250));

        download_btn.setBackground(new java.awt.Color(15, 17, 132));
        download_btn.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        download_btn.setForeground(new java.awt.Color(255, 255, 255));
        download_btn.setText("Get video");
        download_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                download_btnActionPerformed(evt);
            }
        });
        jPanel1.add(download_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 88, 31));
        jPanel1.add(number, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 110, 30));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("URL:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 31));

        download_btn1.setBackground(new java.awt.Color(15, 17, 132));
        download_btn1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        download_btn1.setForeground(new java.awt.Color(255, 255, 255));
        download_btn1.setText("Get list");
        download_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                download_btn1ActionPerformed(evt);
            }
        });
        jPanel1.add(download_btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 88, 31));

        download_btn2.setBackground(new java.awt.Color(15, 17, 132));
        download_btn2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        download_btn2.setForeground(new java.awt.Color(255, 255, 255));
        download_btn2.setText("Get audio");
        download_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                download_btn2ActionPerformed(evt);
            }
        });
        jPanel1.add(download_btn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 88, 31));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 350));

        jMenuBar1.setBackground(new java.awt.Color(145, 146, 97));
        jMenuBar1.setForeground(new java.awt.Color(102, 0, 102));
        jMenuBar1.setBorderPainted(false);

        file.setText("File");

        open.setText("Open");
        file.add(open);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        Exit.setText("Exit");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ExitMousePressed(evt);
            }
        });
        file.add(Exit);

        jMenuBar1.add(file);

        help.setText("Suported site to download");
        help.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                helpMousePressed(evt);
            }
        });
        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(715, 370));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void check_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_btnActionPerformed
        
        if (!input.getText().isEmpty()) {
            get_vid("-F "+input.getText());
        }
    }//GEN-LAST:event_check_btnActionPerformed

    private void helpMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpMousePressed
        try {
            java.awt.Desktop.getDesktop().browse(new URI("https://ytdl-org.github.io/youtube-dl/supportedsites.html"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } 
        
    }//GEN-LAST:event_helpMousePressed

    private void ExitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMousePressed
        System.exit(0);
    }//GEN-LAST:event_ExitMousePressed

    private void download_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_download_btnActionPerformed
        if (!input.getText().isEmpty() && !number.getText().isEmpty()) {
            get_vid("-f "+number.getText()+" -c "+input.getText());
        }        
    }//GEN-LAST:event_download_btnActionPerformed

    private void download_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_download_btn1ActionPerformed
        if (!input.getText().isEmpty()) {
            get_vid("-a "+input.getText());
        }
    }//GEN-LAST:event_download_btn1ActionPerformed

    private void download_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_download_btn2ActionPerformed
        if (!input.getText().isEmpty()) {
            get_vid("-x --audio-format mp3 -c "+input.getText());
        }
    }//GEN-LAST:event_download_btn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main_frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton check_btn;
    private javax.swing.JButton download_btn;
    private javax.swing.JButton download_btn1;
    private javax.swing.JButton download_btn2;
    private javax.swing.JMenu file;
    private javax.swing.JMenu help;
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea notification;
    private javax.swing.JTextField number;
    private javax.swing.JMenu open;
    // End of variables declaration//GEN-END:variables

    private void get_vid(String text) {
            Thread t=new Thread(new Runnable() {
                @Override
                public void run() {
                    Process p;                        
                    try {
			p = Runtime.getRuntime().exec(command); 
		        new Thread(new SyncPipe(p.getErrorStream(), System.err)).start();
	                new Thread(new SyncPipe(p.getInputStream(), System.out)).start();
	                PrintWriter stdin = new PrintWriter(p.getOutputStream());
                        stdin.println("cd "+path);                        
	                stdin.println(path+"\\youtube-dl "+text);            
	                stdin.close();   
	                p.waitFor();                        
                    } catch (Exception e) {
	 		JOptionPane.showMessageDialog(rootPane, e.getMessage());
                    }                    
                }                
            });
            t.start(); 
    }

    private void load_path(String path) {        
        File f=new File(path);        
        if (f.exists()) {
            try {
                BufferedReader fr=new BufferedReader(new FileReader(f));
                String st;
                while((st=fr.readLine())!=null){
                    System.out.println(st);                    
                }
                System.out.println(" .. ");
            } catch (Exception e) {
                System.out.println("Erruer :"+e.getLocalizedMessage());
            }
        }else JOptionPane.showMessageDialog(rootPane,"file does not exist");        
    }

    private void change_path_option() {  
        JFileChooser r=new JFileChooser();
        r.setCurrentDirectory(new java.io.File("."));
        r.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        r.showOpenDialog(null);
        System.out.println(r.getSelectedFile().getAbsolutePath());
        if (!r.getSelectedFile().getAbsolutePath().isEmpty()) {
            if (path_exist(r.getSelectedFile().getAbsolutePath())) {
                JOptionPane.showMessageDialog(rootPane, "This path Exist");
            }else{
                try {
                    BufferedWriter fw=new BufferedWriter(new FileWriter(folder_path,true));
                    fw.newLine();
                    fw.write(r.getSelectedFile().getAbsolutePath());
                    fw.close();
                    path=r.getSelectedFile().getAbsolutePath();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane,"Erruer :"+e.getLocalizedMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "The path is empty");
        }
        load_files();
    }

    private boolean path_exist(String absolutePath) {
        return false;
    }
    
    public static void endd() {
         //System.out.println("cmd endd");
         //JOptionPane.showMessageDialog(null, "rien");
    }

    private void load_files() {
        open.removeAll();
        File f=new File(path);
        File[] files=f.listFiles();
        
        JMenuItem m = new JMenuItem("Open Folder");
        m.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {}
            @Override
            public void mousePressed(MouseEvent e) {
                try {
                        java.awt.Desktop.getDesktop().open(f);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(rootPane, f.getName()+" Could not be opened :"+ex.getMessage());
                    }
            }
            @Override
            public void mouseReleased(MouseEvent e) {}
            @Override
            public void mouseEntered(MouseEvent e) {}
            @Override
            public void mouseExited(MouseEvent e) {}
        });
        m.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));  
        
        open.add(m);        
        
        for (File file1 : files) {
            m = new JMenuItem(file1.getName());            
            m.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {}
                @Override
                public void mousePressed(MouseEvent e) {
                    try {
                        java.awt.Desktop.getDesktop().open(file1);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(rootPane, file1.getName()+" Could not be opened");
                    }
                }
                @Override
                public void mouseReleased(MouseEvent e) {}
                @Override
                public void mouseEntered(MouseEvent e) {}
                @Override
                public void mouseExited(MouseEvent e) {}
            });
            if (file1.isDirectory()) {
                m.setBackground(Color.YELLOW);
                m.setForeground(new java.awt.Color(230,140,0));
            } 
            open.add(m);
        }
        
        m = new JMenuItem("Change defult derectory");
        m.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {}
            @Override
            public void mousePressed(MouseEvent e) {
                change_path_option();
            }
            @Override
            public void mouseReleased(MouseEvent e) {}
            @Override
            public void mouseEntered(MouseEvent e) {}
            @Override
            public void mouseExited(MouseEvent e) {}
        });
        m.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        open.add(new JSeparator());
        open.add(m);
    }

}
